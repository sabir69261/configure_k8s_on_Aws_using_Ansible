---
- name: Launch ec2 Instance for Masternode
  ec2:
      image: "{{ amiid }}"
      instance_type: "{{ instancetype }}"
      count: 1
      group: "{{ sgname }}"
      wait: yes
      vpc_subnet_id: "{{ subnetid }}"
      key_name: "{{ keyname }}"
      assign_public_ip: yes
      region: "{{ regionname }}"
      aws_access_key: "{{ accesskey }}"
      aws_secret_key: "{{ secretkey }}"
      instance_tags: 
         name: "masternode"
  register: master

- name: Launch ec2 Instance for Slavenode
  ec2:
      image: "{{ amiid }}"
      instance_type: "{{ instancetype }}"
      count: 2
      group: "{{ sgname }}"
      wait: yes
      vpc_subnet_id: "{{ subnetid }}"
      key_name: "{{ keyname }}"
      assign_public_ip: yes
      region: "{{ regionname }}"
      aws_access_key: "{{ accesskey }}"
      aws_secret_key: "{{ secretkey }}"
      instance_tags: 
           name: "slavenode"
  register: slave

   
- name: Fetch the Instance IP and Update Inventory for Master Node
  lineinfile:
      path: "{{ inventorypath }}"
      insertafter: '^\[masternode]'
      firstmatch: yes
      line: "{{ master.instances[0].public_ip }}  ansible_user=ec2-user ansible_ssh_private_key_file=/root/main/aws/ss.pem  ansible_ssh_connection=ssh"
      state: present

- name: Fetch the Instances IP and Update Inventory for Slave Node
  lineinfile:
      path: "{{ inventorypath }}"
      insertafter: '^\[slavenode]'
      firstmatch: yes
      line: "{{ item }}"
      state: present
  loop:
       -  "{{ slave.instances[0].public_ip }}  ansible_user=ec2-user ansible_ssh_private_key_file=/root/main/aws/ss.pem  ansible_ssh_connection=ssh"
       -  "{{ slave.instances[1].public_ip }}  ansible_user=ec2-user ansible_ssh_private_key_file=/root/main/aws/ss.pem  ansible_ssh_connection=ssh"
              

                    

   
       


